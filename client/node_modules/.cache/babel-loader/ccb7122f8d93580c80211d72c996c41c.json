{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, EDIT_STREAM, DELETE_STREAM } from \"./types\";\nimport streams from \"../api/streams\";\nimport { formValues } from \"redux-form\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = userId => {\n  return {\n    type: SIGN_OUT,\n    payload: userId\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post(\"/streams\", formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/:${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/:${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/:${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/Miikka/Dev/react-course-udemy/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","EDIT_STREAM","DELETE_STREAM","streams","formValues","signIn","userId","type","payload","signOut","createStream","dispatch","response","post","data","fetchStreams","get","fetchStream","id","deleteStream","delete","editStream","put"],"mappings":"AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,aAPF,QAQO,SARP;AASA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEX,OADD;AAELY,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAIH,MAAD,IAAY;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEV,QADD;AAELW,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMI,YAAY,GAAIN,UAAD,IAAgB,MAAOO,QAAP,IAAoB;AAC9D,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBT,UAAzB,CAAvB;AAEAO,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOJ,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAY,UAAZ,CAAvB;AAEAL,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACa,GAAR,CAAa,aAAYE,EAAG,EAA5B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEP,YAAR;AAAsBQ,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,YAAY,GAAID,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACtD,QAAMR,OAAO,CAACiB,MAAR,CAAgB,aAAYF,EAAG,EAA/B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEU;AAAhC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAG,CAACH,EAAD,EAAKd,UAAL,KAAoB,MAAOO,QAAP,IAAoB;AAChE,QAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACmB,GAAR,CAAa,aAAYJ,EAAG,EAA5B,EAA+Bd,UAA/B,CAAvB;AAEAO,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAEN,WAAR;AAAqBO,IAAAA,OAAO,EAAEI,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAJM","sourcesContent":["import {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM,\n} from \"./types\";\nimport streams from \"../api/streams\";\nimport { formValues } from \"redux-form\";\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId,\n  };\n};\n\nexport const signOut = (userId) => {\n  return {\n    type: SIGN_OUT,\n    payload: userId,\n  };\n};\n\nexport const createStream = (formValues) => async (dispatch) => {\n  const response = await streams.post(\"/streams\", formValues);\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async (dispatch) => {\n  const response = await streams.get(\"/streams\");\n\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n  const response = await streams.get(`/streams/:${id}`);\n\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n  await streams.delete(`/streams/:${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n};\n\nexport const editStream = (id, formValues) => async (dispatch) => {\n  const response = await streams.put(`/streams/:${id}`, formValues);\n\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}