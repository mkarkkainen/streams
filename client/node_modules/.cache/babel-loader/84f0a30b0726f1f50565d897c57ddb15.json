{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Miikka/Dev/react-course-udemy/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport Modal from \"../Modal\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nclass StreamDelete extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = () => {\n      this.props.deleteStream(this.props.match.params.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Stream delete\", /*#__PURE__*/_jsxDEV(Modal, {\n        onDismiss: () => history.push(\"/\"),\n        title: \"Delete Stream\",\n        content: \"Are you sure you want to delete this stream?\",\n        actions: this.renderActions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/Miikka/Dev/react-course-udemy/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","connect","history","fetchStream","deleteStream","StreamDelete","Component","onSubmit","props","match","params","id","componentDidMount","renderActions","render","push","mapStateToProps","state","ownProps","stream","streams"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAazCC,QAbyC,GAa9B,MAAM;AACf,WAAKC,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACD,KAfwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AACDE,EAAAA,aAAa,GAAG;AACd,wBACE;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AAMDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,+CAEE,QAAC,KAAD;AACE,QAAA,SAAS,EAAE,MAAMZ,OAAO,CAACa,IAAR,CAAa,GAAb,CADnB;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,OAAO,EAAC,8CAHV;AAIE,QAAA,OAAO,EAAE,KAAKF,aAAL;AAJX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA7BwC;;AAgC3C,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbC,YADa,CAAf","sourcesContent":["import React from \"react\";\nimport Modal from \"../Modal\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  renderActions() {\n    return (\n      <>\n        <button className=\"ui button negative\">Delete</button>\n        <button className=\"ui button\">Cancel</button>\n      </>\n    );\n  }\n\n  onSubmit = () => {\n    this.props.deleteStream(this.props.match.params.id);\n  };\n\n  render() {\n    return (\n      <div>\n        Stream delete\n        <Modal\n          onDismiss={() => history.push(\"/\")}\n          title=\"Delete Stream\"\n          content=\"Are you sure you want to delete this stream?\"\n          actions={this.renderActions()}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(\n  StreamDelete\n);\n"]},"metadata":{},"sourceType":"module"}